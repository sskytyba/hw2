version: "3"
services:

  app1:
    container_name: app1
    environment:
      - "SPRING_PROFILES_ACTIVE=stage"
    links:
      - mongo
      - elasticsearch
    expose:
      - 8080
    image: supperapp:0.0.7
  app2:
    container_name: app2
    environment:
      - "SPRING_PROFILES_ACTIVE=stage"
    links:
      - mongo
      - elasticsearch
    expose:
      - 8080
    image: supperapp:0.0.7

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  web:
    image: nginx
    container_name: web
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:80
    links:
      - app1
      - app2

  influxdb:
    image: influxdb:1.7
    container_name: influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
      - "2003:2003"
    env_file:
      - 'env.influxdb'
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - C:/Users/serhii.skytyba/projects/supper-app/deployment/docker/influxdb/data:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    links:
      - influxdb
    env_file:
      - 'env.telegraf'
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'env.grafana'
    user: "0"
    links:
      - influxdb
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - C:/Users/serhii.skytyba/projects/supper-app/deployment/docker/grafana/data:/var/lib/grafana
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    links:
      - elasticsearch

volumes:
  elasticsearch-data:
    driver: local